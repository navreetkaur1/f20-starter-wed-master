@model IEnumerable<DotNetDuds.Models.Product>

@{
    ViewData["Title"] = "Shop our " + ViewBag.Category;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Shop our @ViewBag.Category</h1>

<section class="row card-group">
    @foreach (var p in Model)
    {
        <!--css from https://stackoverflow.com/questions/36430816/bootstrap-4-card-deck-with-number-of-columns-based-on-viewport?noredirect=1&lq=1-->
        <div class="col-sm-6 col-lg-4 mb-3">
            <div class="card mb-4 text-center h-100">
                <div class="card-body">
                    <a asp-controller="Products" asp-action="Details" asp-route-id="@p.Id" class="h5">@p.Name</a>
                    <h6>@String.Format("{0:c}", p.Price)</h6>
                    @if (p.Image != null)
                    {
                        <img src="~/img/product-uploads/@p.Image" alt="Product Image" class="thumb" />
                    }
                    else
                    {
                        <img src="~/img/product-uploads/placeholder.gif" alt="Placeholder Image" class="thumb" />
                    }
                    <form method="post" asp-controller="Shop" asp-action="AddToCart">
                        <input name="ProductId" id="ProductId" type="hidden" value="@p.Id" />
                        <fieldset class="form-group">
                            <label class="control-label" for="Quantity">Quantity</label>
                            <input name="Quantity" id="Quantity" type="number" min="1" max="99999" required class="thumb" />
                        </fieldset>
                        <button class="btn btn-primary">Add to Cart</button>
                    </form>
                </div>
            </div>
        </div>
    }
</section>
